@{
    ViewData["Title"] = "POS";
    Layout = "~/Areas/Admin/Views/Shared/Layout.cshtml";
}

<div class="pt-4"></div>
<div class="container-fluid row">
    <!-- Phần Sản phẩm -->
    <div class="col-lg-7 mb-md-4 mb-lg-0 col-sm-12">
        <div class="card h-100">
            <div class="p-3 m-0 bg-light">
                Mục sản phẩm
            </div>

            <div class="row gy-1">
                <div class="col-sm-6">
                    <div class="input form-control d-flex justify-content-end">
                        <select class="form-control selectpicker" name="CateId" data-live-search="true">
                            <option>Tất cả các danh mục</option>
                            @foreach(var cate in ViewBag.category)
                            {
                                <option value="@cate.CategoryId">@cate.Name</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="input form-control d-flex justify-content-end">
                        <input class="form form-control searchProducts" placeholder="Tìm kiếm sản phẩm" type="search" />
                    </div>
                </div>
            </div>

            <!-- Thêm tính năng cuộn dọc khi có nhiều sản phẩm -->
            <div class="card-body pt-2" style="max-height: 75vh; overflow-y: auto;" id="CardProducts">
                <div class="row">
                    <!-- Card 1 -->
                    @foreach (var product in ViewBag.product)
                    {
                        <div class="col-6 col-md-3 mb-3">
                            <div class="card h-100">
                                <a class="getProductInfo" type="button" data-id="@product.ProductId">
                                    <img src="~/Upload/Products/@product.Image" style="width:135px; height:135px; object-fit: cover; display: block; margin: 0 auto;" class="card-img-top" alt="...">
                                    <div class="card-body">
                                        <p class="card-text text-truncate-2">@product.Name</p>
                                    </div>
                                </a>
                            </div>
                        </div>
                    }
                   <!-- Thêm các sản phẩm khác tương tự -->
                </div>
            </div>
            @Html.Partial("ViewProduct")
        </div>
    </div>

    <!-- Phần Hóa đơn -->
    <div class="col-lg-5 col-sm-12 mb-md-5">
        <div class="card h-100">
            <div class="p-3 m-0 bg-light">
                <h5 class="mb-0">Hóa đơn</h5>
            </div>

            <!-- Thêm tính năng cuộn dọc cho toàn bộ phần hóa đơn -->
            <div class="card-body" style="max-height: 80vh; overflow-y: auto;">
                <!-- Phần chọn và thêm khách hàng -->
                <div class="">
                    <div class="row w-100">
                        <div class="col-7">
                            <select class="form-control border selectpicker" name="selectCustomer" data-live-search="true" placeholder="Chọn khách hàng...">
                                <option disabled selected>Chọn khách hàng...</option>
                                @foreach (var cus in ViewBag.user)
                                {
                                    <option value="@cus.UserId">@cus.LastName @cus.FirstName (@cus.PhoneNumber)</option>
                                }
                            </select>
                        </div>
                        <div class="col-5 justify-content-end">
                            <button class="btn btn-success w-100 ms-auto"
                                    data-bs-toggle="modal"
                                    data-bs-target="#UserModal">
                                <i class="fa fa-plus"></i>
                                Thêm KH
                            </button>
                            @Html.Partial("ModalUser")
                        </div>
                    </div>
                </div>

                <!-- Thông tin khách hàng -->
                <div class="mb-3">
                    <h5 class="mx-2 mt-2">Thông tin khách hàng</h5>
                    <div class="row form-group">
                        <div class="col-3">Tên:</div>
                        <div id="nameCustomer" class="col-9 fw-bold"></div>
                        <div  class="col-3">SĐT:</div>
                        <div id="phoneCustomer" class="col-9 fw-bold"></div>
                        <div class="col-3">Địa chỉ:</div>
                        <div id="addressCustomer" class="col-9 fw-bold"></div>
                    </div>
                </div>

                <!-- Giỏ hàng -->
                <div class="card mb-3">
                    <div class="table-responsive">
                        <table id="shopping-cart" class="table table-hover mb-0">
                            <thead class="bg-light">
                                <tr>
                                    <th>Sản phẩm</th>
                                    <th>Biến thể</th>
                                    <th>Số lượng</th>
                                    <th>Giá</th>
                                    <th>Xóa</th>
                                </tr>
                            </thead>
                            <tbody>
                            
                            </tbody>
                        </table>
                    </div>
                </div>
                @* Voucher *@
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-7">
                            <input type="text" class="form-control" name="Voucher" placeholder="Nhập voucher"/>
                            <p id="resultVoucher" class="text-danger text-sm mx-3" style="font-size:13px;display:none"></p>

                        </div>
                        <div class="col-md-5">
                            <button id="Checkvoucher" type="button" class="btn btn-outline-secondary">Kiểm tra Voucher</button>
                        </div>
                    </div>
                </div>
                <!-- Giá giỏ hàng -->
                <div class="form-group">
                    <!-- Tổng phụ -->
                    <div class="row mb-2">
                        <div class="col-5"><strong>Tổng phụ:</strong></div>
                        <div class="col-7 text-end"><strong id="TotalPrice">0đ</strong></div>
                    </div>
                    <!-- Giảm giá -->
                    <div class="row mb-2">
                        <div class="col-5"><strong>Giảm Giá Khuyến Mãi:</strong></div>
                        <div class="col-7 text-end" id="promotion">
                            <a href="javascript:void(0)" data-bs-toggle="modal" data-bs-target="#ModalDiscount">
                                <i class="fas fa-pencil-alt text-info"></i>
                            </a>
                            <strong id="Discount">0đ</strong>
                            @Html.Partial("ModalDiscount")
                        </div>
                    </div>
                    <!-- Giảm giá -->
                    <div class="row mb-2">
                        <div class="col-5"><strong>Giảm Giá Thêm:</strong></div>
                        <div class="col-7 text-end" id="promotion">
                            <a href="javascript:void(0)" data-bs-toggle="modal" data-bs-target="#ModalDeduct">
                                <i class="fas fa-pencil-alt text-info"></i>
                            </a>

                            <strong id="Deduct">0đ</strong>
                            @Html.Partial("ModalDeduct")
                        </div>
                    </div>
                    <hr />
                    <!-- Tổng cộng -->
                    <div class="row">
                        <div class="col-5"><strong>Tổng cộng:</strong></div>
                        <div class="col-7 text-end"><strong id="TotalPayment">0đ</strong></div>
                    </div>
                </div>

                <!-- Thanh toán bằng -->
                <div class="pt-3">
                    <p><strong>Đã thanh toán bởi:</strong></p>
                    <div class="d-flex justify-content-start align-items-center">
                        <ul class="list-unstyled option-buttons d-flex m-0">
                            <li class="mx-2">
                                <input type="radio" id="cash" value="cash" name="type" hidden="" checked="">
                                <label for="cash" class="btn btn-bordered btn-bordered-black px-4 mb-0">Tiền mặt</label>
                            </li>
                            <li class="mx-2">
                                <input type="radio" value="card" id="card" name="type" hidden="">
                                <label for="card" class="btn btn-bordered btn-bordered-black px-4 mb-0">Thẻ</label>
                            </li>
                        </ul>
                    </div>
                    <style>
                     

                    </style>
                </div>

                <!-- Các nút hành động -->
                <div class="row d-flex justify-content-center pt-3">
                    <div class="col-6">
                        <button class="btn btn-danger form-control" type="button" onclick="confirm('Bạn có chắc chắn muốn hủy đơn hàng?') ? cancelOrder() : '';">Hủy đơn hàng</button>
                    </div>
                    <div class="col-6">
                        <button class="btn btn-success form-control" type="button" onclick="confirm('Bạn có chắc chắn muốn đặt hàng?') ? placeOrder() : '';">Đặt đơn hàng</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
<script src="~/Admin/assets/js/core/jquery-3.7.1.min.js"></script>
<script src="~/admin/assets/js/view/pos.js"></script>
@* <script type="text/javascript">
    $(document).ready(function () {
        // Sử dụng delegated events để đảm bảo sự kiện click hoạt động trên các phần tử mới
        $(document).ready(function () {
            // Sử dụng delegated events để đảm bảo sự kiện click hoạt động trên các phần tử mới
            $(document).ready(function () {
                // Sử dụng delegated events để đảm bảo sự kiện click hoạt động trên các phần tử mới
                $(document).on('click', '.getProductInfo', function () {
                    var id = $(this).data('id');
                    let url = '@Url.Action("GetProduct", "POS", new { area = "Admin" })';
                    $('.loading-container').show();
                    $.ajax({
                        url: url,
                        data: { id: id },
                        success: function (res) {
                            if (res.success) {
                                // Hiển thị thông tin sản phẩm
                                $('#nameProduct').text(res.product.name);
                                $('#priceProduct').text(res.product.sellPrice);
                                $('#categoryName').text(res.product.category.name);
                                $('#brandName').text(res.product.brand.name);
                                $('#sku').text(res.product.sku)
                                $('#imgProduct').attr('src', '/Upload/Products/' + res.product.image);
                                $('#IdProduct').val(res.product.productId);
                                // Hiển thị các thuộc tính biến thể
                                var variantContainer = $('#variantCardsContainer');
                                variantContainer.empty(); // Xóa nội dung cũ
                                if (res.product.varientProducts && res.product.varientProducts.length > 0) {
                                    res.product.varientProducts.forEach(function (variant) {
                                        var variantCard = `
                                    <div class="variant-card ${variant.stock > 0 ? '' : 'out-of-stock'}" data-id="${variant.varientId}">
                                        <h6>${variant.sku}</h6>
                                            <p>${variant.price != null ? variant.price.toLocaleString('vi-VN') + ' đ' : 'Giá chưa có'}</p>
                                        ${variant.stock > 0 ? `
                                            <p class="text-success">Còn hàng</p>
                                        ` : '<span class="text-danger">Hết hàng</span>'}
                                    </div>
                                `;
                                        variantContainer.append(variantCard);
                                    });
                                } else {
                                    variantContainer.append('<p>Không có biến thể nào cho sản phẩm này.</p>');
                                }
                                $('#productDetail').modal('show');
                            } else {
                                alert(res.message);
                            }
                            $('.loading-container').hide();
                        },
                        error: function (xhr, status, error) {
                            alert("Đã có lỗi: " + xhr.responseText);
                            $('.loading-container').hide();
                        }
                    });
                });

                // Thêm sự kiện cho việc chọn biến thể bằng cách nhấp vào thẻ
                $(document).on('click', '.variant-card', function () {
                    if (!$(this).hasClass('out-of-stock')) {
                        $('.variant-card').removeClass('selected');
                        $(this).addClass('selected');

                        // Thêm logic xử lý khi chọn biến thể
                        var selectedVariantId = $(this).data('id');
                        // Có thể gọi API hoặc cập nhật thông tin hiển thị tùy theo yêu cầu của bạn
                        console.log("Đã chọn biến thể ID: " + selectedVariantId);
                    }
                });
            });
        });
        // Handle product search
        let timeout = null;
        $('.searchProducts').on('input', function () {
            clearTimeout(timeout);
            const name = $(this).val().trim();
            const cateId = $('select[name="CateId"]').val();
            timeout = setTimeout(function () {
                let url = '@Url.Action("GetProducts", "POS", new { area = "Admin" })';
                $.ajax({
                    url: url,
                    data: { name: name, cateId: cateId },
                    success: function (res) {
                        if (res.success) {
                            let productsHtml = '';
                            if (res.products.length > 0) {
                                $.each(res.products, function (index, product) {
                                    productsHtml += `
                                <div class="col-6 col-md-3 mb-3">
                                    <div class="card h-100">
                                        <a class="getProductInfo" type="button" data-id="${product.productId}">
                                            <img src="/Upload/Products/${product.image}" style="width:135px; height:135px; object-fit: cover; display: block; margin: 0 auto;" class="card-img-top" alt="${product.name}">
                                            <div class="card-body">
                                                <p class="card-text text-truncate-2">${product.name}</p>
                                                <p class="card-text">${product.sellPrice || 'Giá chưa cập nhật'}</p>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                                `;
                                });
                            } else {
                                productsHtml = '<div class="col-12"><p class="text-center">Không tìm thấy sản phẩm nào.</p></div>';
                            }
                            $('#CardProducts .row').html(productsHtml);
                        } else {
                            $('#CardProducts .row').html('<div class="col-12"><p class="text-center">Đã xảy ra lỗi khi tìm kiếm sản phẩm.</p></div>');
                        }
                    },
                    error: function () {
                        $('.loading-container').hide();
                        $('#CardProducts .row').html('<div class="col-12"><p class="text-center">Đã xảy ra lỗi kết nối.</p></div>');
                    }
                });
            }, 300);
        });

        $('select[name="CateId"]').change(function () {
            var id = $(this).val();
            let name = $('input[name="searchProducts"]').val(); // Lấy giá trị từ ô tìm kiếm
            let url = '@Url.Action("GetProducts", "POS", new { area = "Admin" })';

            $('.loading-container').show();

            $.ajax({
                url: url,
                data: { name: name, cateId: id },
                success: function (res) {
                    $('.loading-container').hide();
                    if (res.success) {
                        let productsHtml = '';
                        // Duyệt qua từng sản phẩm và tạo HTML tương ứng
                        $.each(res.products, function (index, product) {
                            productsHtml += `
                    <div class="col-6 col-md-3 mb-3">
                        <div class="card h-100">
                            <a class="getProductInfo" type="button" data-id="${product.productId}">
                                <img src="/Upload/Products/${product.image}" style="width:135px; height:135px; object-fit: cover; display: block; margin: 0 auto;" class="card-img-top" alt="...">
                                <div class="card-body">
                                    <p class="card-text text-truncate-2">${product.name}</p>
                                    <p class="card-text">${product.sellPrice || 'Giá chưa cập nhật'}</p>
                                </div>
                            </a>
                        </div>
                    </div>
                `;
                        });

                        // Gán HTML mới vào phần tử CardProducts
                        $('#CardProducts .row').html(productsHtml);
                    } else {
                        alert(res.message);
                    }
                },
                error: function (xhr, status, error) {
                    alert("Đã có lỗi xảy ra: " + xhr.responseText);
                    $('.loading-container').hide();
                }
            });
        });

        $('#Checkvoucher').click(function () {
            var voucher = $('input[name="Voucher"]').val();
            let url = '@Url.Action("CheckVoucher", "POS", new { area = "Admin" })';

            if (voucher.length > 3) {
                $.ajax({
                    url: url,
                    data: { code: voucher }, // Đổi key từ 'voucher' thành 'code' để khớp với action method
                    success: function (res) {
                        if (res.success) {
                            $('#resultVoucher').text("Voucher đã được áp dụng thành công").removeClass('text-danger').addClass('text-success').show();

                            //Format thành tiền Việt cho phần giảm giá
                            if (res.voucher.promotion[res.voucher.promotion.length - 1] != "%") {
                                // Nếu là giảm tiền mặt (không có %), chuyển đổi sang số và format thành tiền VND
                                var promotionAmount = parseFloat(res.voucher.promotion.replace(/,/g, '')); // Loại bỏ dấu phẩy (nếu có) và chuyển thành số
                                var formattedPromotion = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(promotionAmount);

                                $('#promotion').text(formattedPromotion);
                            } else {
                                // Nếu là phần trăm giảm giá (%)
                                $('#promotion').text(res.voucher.promotion);
                            }

                         
                        } else {
                            $('#resultVoucher').text(res.message).removeClass('text-success').addClass('text-danger').show();
                        }
                    },
                    error: function (xhr, message) {
                        $('#resultVoucher').text("Có lỗi xảy ra: " + message).removeClass('text-success').addClass('text-danger').show();
                    }
                });
            } else {
                $('#resultVoucher').text("Mã voucher không hợp lệ.").removeClass('text-success').addClass('text-danger').show();
            }
        });
        $('select[name="selectCustomer"]').change(function () {
            $('#nameCustomer').text('');
            $('#phoneCustomer').text('');
            $('#addressCustomer').text('');

            var id = $(this).val();
            let url = '@Url.Action("GetUser", "POS", new { area = "Admin" })';
            $('#Loading-container').show();

            $.ajax({
                url: url,
                data: { id: id },
                success: async function (res) { // Mark the success function as async
                    const address = res.addresses[0]; // Access the first address in the array
                    const province = await getProvince(address.province); // Use await here
                    const district = await getDistrict(address.district);
                    const ward = await getWard(address.ward);

                    $('#Loading-container').hide();
                    $('#nameCustomer').text(res.lastName + " " + res.firstName);
                    $('#phoneCustomer').text(res.phoneNumber);
                    $('#addressCustomer').text(address.addressLine + ", " + ward.name + ", " + district.name + ", " + province.name); // Access the name property from the API response
                },
                error: function (xhr, status, error) {
                    alert("Đã có lỗi xảy ra: " + xhr.responseText);
                    $('#Loading-container').hide();
                }
            });
        });

        async function fetchStaticData() {
            const response = await fetch('/Province_VN.json');
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return await response.json(); // Chuyển đổi phản hồi thành JSON
        }

        async function getProvince(provinceId) {
            const allData = await fetchStaticData();
            return allData.find(province => province.code === provinceId);
        }

        async function getDistrict(districtId) {
            const allData = await fetchStaticData();
            for (const province of allData) {
                const district = province.districts.find(d => d.code === districtId);
                if (district) {
                    return district;
                }
            }
            return null;
        }

        async function getWard(wardId) {
            const allData = await fetchStaticData();
            for (const province of allData) {
                for (const district of province.districts) {
                    const ward = district.wards.find(w => w.code === wardId);
                    if (ward) {
                        return ward;
                    }
                }
            }
            return null;
        }


        $('#AddToCart').click(function () {
            var id_variant = $('.variant-card').data('id');
            var id_product = $('#IdProduct').val();
            $('#productDetail').modal('hide');
            console.log(id_product)
            if (id_variant != null) {
                $.ajax({
                    url: '@Url.Action("GetVarientProduct", "POS", new { area = "Admin" })',
                    type: 'GET',
                    data: { id: id_variant, productId: id_product }, // Thêm productId vào dữ liệu gửi đi
                    success: function (response) {
                        if (response.success) {
                            // Lấy dữ liệu biến thể từ result
                            var varient = response.varient.result;

                            // Tạo HTML cho một dòng mới trong bảng
                            var newRow = `
                                <tr>
                                    <td>${varient.product.name}</td>
                                    <td>${varient.attributes}</td>
                                        <td><input  min="1" type="number" class="form-control" value="1" /></td>
                                    <td>${varient.price.toLocaleString()}đ</td>
                                    <td>
                                              <button class="btn btn-danger btn-sm btn-delete"><i class="fas fa-trash"></i></button>
                                    </td>
                                </tr>
                            `;

                            // Append dòng mới vào tbody của bảng
                            $('#shopping-cart tbody').append(newRow);
                        } else {
                            alert(response.message);
                        }

                    },
                    error: function () {
                        alert("Đã xảy ra lỗi khi lấy biến thể sản phẩm.");
                    }
                });
            } else {
                $.ajax({
                    url: '@Url.Action("GetProduct", "POS", new { area = "Admin" })',
                    type: 'GET',
                    data: { id: id_product },
                    success: function (response) {
                        // Lấy dữ liệu biến thể và thêm vào bảng giỏ hàng

                        // Tạo HTML cho một dòng mới trong bảng
                        var newRow = `
                            <tr>
                                    <td>${response.Product.Name}</td>
                                <td>Không</td>
                                <td><input type="number" min="1" class="form-control" value="1" /></td>
                                    <td>${response.Price.toLocaleString()}đ</td>
                                <td>
                                            <button class="btn btn-danger btn-sm btn-delete">Xóa</button>
                                </td>
                            </tr>
                        `;

                        // Append dòng mới vào tbody của bảng
                        $('#shopping-cart tbody').append(newRow);
                    },
                    error: function () {
                        alert("Đã xảy ra lỗi khi lấy sản phẩm.");
                    }
                });
            }
        });
        // Sự kiện xóa cho nút "Xóa" sử dụng event delegation
        $('#shopping-cart').on('click', '.btn-delete', function () {
            // Xác nhận trước khi xóa
            if (confirm('Bạn có chắc muốn xóa sản phẩm này ra khỏi giỏ hàng không?')) {
                // Xóa hàng hiện tại
                $(this).closest('tr').remove();
            }
        });

        $('.btn-deduct').on('click', function () {
            // Lấy giá trị từ input DeductValue
            var deductValue = $('input[name="DeductValue"]').val();
            // Chuyển deductValue thành số trước khi định dạng
            var formattedValue = Number(deductValue).toLocaleString('vi-VN');

            // Gán giá trị đã định dạng vào phần tử với id="Deduct"
            $('#Deduct').text(formattedValue + 'đ');


            // Ẩn modal sau khi lưu
            $('#ModalDeduct').modal('hide');
        });


        $('.btn-discount').on('click', function () {
            // Lấy giá trị từ input DeductValue
            var discountValue = $('input[name="DiscountValue"]').val();
            // Chuyển deductValue thành số trước khi định dạng
            var formattedValue = Number(discountValue).toLocaleString('vi-VN');
            // Gán giá trị đã định dạng vào phần tử với id="Deduct"
            $('#Discount').text(formattedValue + 'đ');
            // Ẩn modal sau khi lưu
            $('#ModalDiscount').modal('hide');
        });
        // Sự kiện khi modal deduct bị ẩn
        $('#ModalDeduct').on('hidden.bs.modal', function () {
            $('input[name="DeductValue"]').val(0);
            //Tắt trạng thái load
            $('.loading-container').hide();
        });
        // Sự kiện khi modal discount bị ẩn
        $('#ModalDiscount').on('hidden.bs.modal', function () {
            $('input[name="DiscountValue"]').val(0);
            //Tắt trạng thái load
            $('.loading-container').hide();
        });
        // Sự kiện khi modal Product bị ẩn
        $('#productDetail').on('hidden.bs.modal', function () {
            $('input[name="DeductValue"]').val(0);
            //Tắt trạng thái load
            $('#nameProduct').text('');
            $('#priceProduct').text('');
            $('#categoryName').text('');
            $('#brandName').text('');
            $('#sku').text('')
            $('#imgProduct').attr('src', '/Upload/Products/' + none.png);
            $('#IdProduct').val('');
            $('.loading-container').hide();
        });
    });
</script> *@
