
@{
    ViewData["Title"] = $"Danh mục sản phẩm - {(ViewBag.Category?.Name ?? "")}";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model IPagedList<Tech_Store.Models.Product>
@using System.Globalization;
@using X.PagedList;
@using X.PagedList.Mvc.Core

<div class="container mt-3">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb" class="mb-3">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/" class="text-decoration-none">Trang chủ</a></li>
            <li class="breadcrumb-item"><a class="text-decoration-none">Danh mục</a></li>
            <li class="breadcrumb-item active" aria-current="page">@ViewBag.Category.Name</li>

        </ol>
    </nav>

    <!-- Filter Section -->
    <div class="filter-toolbar p-3 bg-light rounded-3 mb-4">
        <form action="~/Category/FilterCategory" method="get" autocomplete="off" novalidate>
            <div class="row g-2 mx-auto flex-md-row">
                <!-- g-2 để giảm khoảng cách, chỉ giữ flex-md-row cho desktop -->
                <!-- Label -->
                <div class="col-12 col-md-auto mb-2 mb-md-0">
                    <span class="text-muted small fw-medium">Bộ lọc:</span>
                </div>

                <!-- Hidden input -->
                <input type="hidden" name="eng_title" value="@ViewBag.Category.EngTitle" />

                <!-- Sắp xếp -->
                <div class="col-6 col-md-auto px-2 mb-2 mb-md-0">
                    <select name="order" id="order" class="form-select form-select-sm border-0 bg-white shadow-sm w-100">
                        <option value="" selected>Sắp xếp theo</option>
                        <option value="alphabet">Từ A-Z</option>
                        <option value="alphabet_desc">Từ Z-A</option>
                        <option value="price">Giá thấp đến cao</option>
                        <option value="price_desc">Giá cao đến thấp</option>
                        <option value="sell">Lượt bán</option>
                        <option value="care">Lượt quan tâm</option>
                    </select>
                </div>

                <!-- Mức giá -->
                <div class="col-6 col-md-auto px-2 mb-2 mb-md-0">
                    <select name="price" id="price" class="form-select form-select-sm border-0 bg-white shadow-sm w-100">
                        <option value="" selected>Mức giá</option>
                        <option value="max5">Dưới 5 triệu</option>
                        <option value="max10">5 - 10 triệu</option>
                        <option value="max20">10 - 20 triệu</option>
                        <option value="max50">20 - 50 triệu</option>
                        <option value="more">Trên 50 triệu</option>
                    </select>
                </div>

                <!-- Thương hiệu -->
                <div class="col-6 col-md-auto px-2 mb-2 mb-md-0">
                    <select name="brand" id="brand" class="form-select form-select-sm border-0 bg-white shadow-sm w-100">
                        <option value="" selected>Thương hiệu</option>
                        @foreach (var brand in ViewBag.list_brand)
                        {
                            <option value="@brand.BrandId">@brand.Name</option>
                        }
                    </select>
                </div>

                <!-- Buttons -->
                <div class="col-12 col-md-auto ms-md-auto d-flex justify-content-center gap-2">
                    <button class="btn btn-sm btn-outline-success flex-grow-1 flex-md-grow-0" type="submit">
                        <i class="fas fa-search me-1"></i>Tìm
                    </button>
                    <button class="btn btn-sm btn-outline-danger flex-grow-1 flex-md-grow-0" id="resetBtn" type="button">
                        <i class="fas fa-sync-alt me-1"></i>Reset
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>
<div class="container">
    @if (!Model.Any())
    {
        <div class="container d-flex flex-column align-items-center justify-content-center py-5">
            <div class="text-center">
                <i class="fas fa-box-open fa-3x text-muted mb-3"></i>
                <h4 class="text-secondary">Không có sản phẩm phù hợp</h4>
                <p class="text-muted">Hãy thử thay đổi bộ lọc hoặc tìm kiếm từ khóa khác.</p>
            </div>
        </div>
    }
    else
    {
       <div class="row g-2">
            @foreach (var item in Model)
            {
                <div class="col-4 col-md-3 product-card-ct" data-id="@item.ProductId">
                    <div class="product-link" data-slug="@item.Slug">
                        <div class="card h-100">
                            <!-- Sale Badge -->
                            <div class="position-absolute d-flex flex-column gap-1 d-md-block" style="top: 5px; left: 5px; z-index: 2;">
                                @if (item.SellPrice != item.OriginalPrice)
                                {
                                    @if (item.DiscountPercentage != null)
                                    {
                                        <span class="badge bg-danger small p-1 d-block">Giảm @item.DiscountPercentage%</span>
                                    }
                                    @if (item.DiscountAmount != null)
                                    {
                                        <span class="badge bg-danger small p-1 d-block">Giảm @((item.OriginalPrice - item.SellPrice)?.ToString("C0", new CultureInfo("vi-VN")))</span>
                                    }
                                }
                            </div>
                            <!-- Installment Badge -->
                           @*  <div class="position-absolute" style="top: 5px; right: 5px; z-index: 2;" class="d-md-block" id="installment-badge-@item.ProductId">
                                <span class="badge bg-white text-primary border border-primary small p-1">Trả góp 0%</span>
                            </div> *@

                            <div class="image-container" style="overflow: hidden;">
                                <img src="/Upload/Products/@item.Image" class="product-image" alt="@item.Name" />
                            </div>

                            <div class="card-body p-3 d-flex flex-column">
                                <h6 class="card-title mb-2 product-title" style="font-size: 0.9rem; display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; overflow: hidden;">@item.Name</h6>
                                <div class="d-flex align-items-center gap-1 mb-2 flex-wrap">
                                    <span class="text-danger fw-bold" style="font-size: 0.9rem;">@item.SellPrice?.ToString("C0", new CultureInfo("vi-VN"))</span>
                                    @if (item.SellPrice != item.OriginalPrice)
                                    {
                                        <span class="text-decoration-line-through text-muted" style="font-size: 0.7rem;">@item.OriginalPrice?.ToString("C0", new CultureInfo("vi-VN"))</span>
                                    }
                                </div>
                                <button class="btn btn-outline-danger btn-sm w-100 mt-auto addToWishList" data-id="@item.ProductId">
                                    <i class="far fa-heart"></i> Yêu thích
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
</div>

        <!-- Pagination -->
        <div class="d-flex justify-content-center mt-3">
            @Html.PagedListPager(Model, page => Url.Action("Category", new { page }), new PagedListRenderOptions
               {
                   UlElementClasses = new[] { "pagination" }, // Sử dụng lớp `pagination` của Bootstrap
                   LiElementClasses = new[] { "page-item" },  // Sử dụng lớp `page-item` của Bootstrap
                   PageClasses = new[] { "page-link" },       // Sử dụng lớp `page-link` của Bootstrap
                   ActiveLiElementClass = "active",          // Đánh dấu trang hiện tại bằng `active`
                   LinkToPreviousPageFormat = "&laquo;",     // Sử dụng ký tự Bootstrap mặc định cho trang trước
                   LinkToNextPageFormat = "&raquo;",         // Sử dụng ký tự Bootstrap mặc định cho trang sau
                   DisplayLinkToFirstPage = PagedListDisplayMode.Always, // Hiển thị nút về trang đầu
                   DisplayLinkToLastPage = PagedListDisplayMode.Always,  // Hiển thị nút về trang cuối
                   DisplayEllipsesWhenNotShowingAllPageNumbers = true    // Hiển thị dấu "..." nếu không hiển thị hết số trang
               })
        </div>

    }
   
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {


        // Giá trị từ ViewBag
        var orderValue = "@ViewBag.Order";
        var priceValue = "@ViewBag.Price";
        var brandValue = "@ViewBag.Brand";

        // Set giá trị cho dropdown và bỏ selected ở option mặc định
        if (orderValue) {
            $('#order').val(orderValue);  // Chọn giá trị từ ViewBag
        } else {
            $('#order option:first').prop('selected', true);  // Nếu không có giá trị, chọn option đầu tiên
        }

        if (priceValue) {
            $('#price').val(priceValue);  // Chọn giá trị từ ViewBag
        } else {
            $('#price option:first').prop('selected', true);  // Nếu không có giá trị, chọn option đầu tiên
        }

        if (brandValue) {
            $('#brand').val(brandValue);  // Chọn giá trị từ ViewBag
        } else {
            $('#brand option:first').prop('selected', true);  // Nếu không có giá trị, chọn option đầu tiên
        }

        $('#resetBtn').on('click', function () {
            window.location.href = '/Category/' + '@ViewBag.Category.EngTitle';
        });

    });
</script>
 