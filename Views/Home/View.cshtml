@model Tech_Store.Models.Product
@{
    ViewData["Title"] = "Thông tin sản phẩm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using System.Globalization;
@using Tech_Store.Helpers



@functions {
    public string extractVideoID(string url)
    {
        if (string.IsNullOrEmpty(url)) return string.Empty;

        var regex = new System.Text.RegularExpressions.Regex(@"^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#&?]*).*");
        var match = regex.Match(url);

        if (match.Success && match.Groups[7].Length == 11)
            return match.Groups[7].Value;

        return string.Empty;
    }
}

<div class="container my-5">
    <div class="row">
        <div class="col-md-6">
            <div class="gallery-wrapper">
                <!-- Thumbnails Section -->
                <div class="thumbnail-container-wrapper">
                    <button class="thumbnail-control prev">
                        <i class="fas fa-chevron-up"></i>
                    </button>
                    <div class="thumbnail-container">

                        <!-- Nếu không có YouTube URL thì hình ảnh đầu tiên sẽ active -->
                        <div class="thumbnail active)" data-src="/Upload/Products/@Model.Image"
                             style="background-image: url('/Upload/Products/@Model.Image')"></div>

                        @foreach (var img in Model.Galleries)
                        {
                            <div class="thumbnail" data-src="/Upload/Products/@img.Path"
                                 style="background-image: url('/Upload/Products/@img.Path')"></div>
                        }
                    </div>

                    <button class="thumbnail-control next">
                        <i class="fas fa-chevron-down"></i>
                    </button>
                </div>

                <!-- Main Image Gallery -->
                <div class="product-gallery">
                    <img id="mainImage" src="/Upload/Products/@Model.Image" alt="Product Image">
                </div>
            </div>

        </div>

        <div class="col-md-5 product-info">
            <h3>@Model.Name</h3>
            <div class="rating">
                <span class="text-muted">(@ViewBag.review_count Đánh giá)</span>
            </div>
            <div class="d-flex flex-wrap gap-3">
                @foreach (var varient in Model.VarientProducts)
                {
                    <div class="card varient-card @(varient.Stock <= 0 ? "disabled" : "")" data-id="@varient.VarientId" @(varient.Stock <= 0 ? "style='pointer-events: none; opacity: 0.5;'" : "")>
                        <div class="varient-attributes">
                            <span>@varient.Attributes</span>
                        </div>
                        <div class="varient-price">
                            <span>@varient.Price?.ToString("C0", new CultureInfo("vi-VN"))</span>
                        </div>
                    </div>
                }

            </div>

            <style>
              
            </style>
            <div class="price">
                @Model.SellPrice?.ToString("C0",new CultureInfo("vi-VN"))
            </div>
            <div class="row g-3 p-3 bg-white rounded-3 shadow-sm">
                <!-- Nút Mua ngay -->
                <div class="col-md-8">
                    <button type="button" id="ToCheckOutBtn" data-id="@Model.ProductId" class="btn btn-buy-now text-white w-100 py-3 fw-semibold text-uppercase shadow">
                        <i class="fas fa-bolt me-2"></i>
                        Mua ngay
                    </button>
                </div>
                <!-- Nút Thêm vào giỏ -->
                <div class="col-md-4 ">
                    <button type="button" id="AddToCart" class="btn btn-cart btn-outline-danger w-100 py-3">
                        <i class="fa fa-cart-plus" aria-hidden="true"></i>
                        Thêm vào giỏ
                    </button>
                </div>
            </div>
        </div>
    </div>
    <style>
      
    </style>
   
    <div class="row pt-3">
        <div class="col-12">
                <div class="product-detail">
                <div class="title-container">
                    <h4 class="text-center">Thông tin sản phẩm</h4>
                </div>
                @if(!string.IsNullOrEmpty(Model.UrlYoutube))
                {
                    <div class="row pt-3">
                        <div class="col-12">
                            <div class="video-container">
                                <iframe src="https://www.youtube.com/embed/@extractVideoID(@Model.UrlYoutube)"
                                        frameborder="0"
                                        allowfullscreen>
                                </iframe>
                            </div>
                        </div>
                    </div>
                }
             
                    <div class="description-content">
                        <p class="product-description">@Html.Raw(Model.Description)</p>
                    </div>
                    <div class="fade-bottom"></div>
                    <button class="btn btn-outline-danger btn-see-more">Xem thêm</button>
                </div>
         
        </div>
    </div>
    <section class="products">
        <div class="container">
            <div class="product-section">
                <div style="max-width: 85vw; padding: 10px; display: flex; justify-content: space-between; align-items: center;">
                    <h3 class="text-dark mb-0">Gợi ý cho bạn</h3>
                </div>

                <!-- Nút điều hướng cho phần sản phẩm mới -->
                <button class="btn-scroll btn-prev" data-target="suggestion">
                    <i class="fa fa-chevron-left"></i>
                </button>
                <button class="btn-scroll btn-next" data-target="suggestion">
                    <i class="fa fa-chevron-right"></i>
                </button>
                <div class="scrolling-wrapper" data-wrapper="suggestion">
                    <div class="row pt-2 mx-auto">
                        @foreach (var product in ViewBag.related_products)
                        {
                            <div class="card product-card" style="max-width: 250px;" data-id="@product.ProductId">
                                <!-- Sale Badge -->
                                <div class="position-absolute d-flex gap-2" style="top: 10px; left: 10px; z-index: 2;">
                                    @if (product.SellPrice != product.OriginalPrice)
                                    {
                                        @if (product.DiscountPercentage != null)
                                        {
                                            <span class="badge bg-danger p-2">Giảm @product.DiscountPercentage%</span>
                                        }
                                        @if (product.DiscountAmount != null)
                                        {

                                            <span class="badge bg-danger p-2">Giảm @((product.OriginalPrice - product.SellPrice).ToString("C0", new CultureInfo("vi-VN")))</span>
                                        }

                                    }
                                </div>
                                <!-- Installment Badge -->
                                <div class="position-absolute" style="top: 10px; right: 10px; z-index: 2;">
                                    <span class="badge bg-white text-primary border border-primary p-2">Trả góp 0%</span>
                                </div>

                                <div class="product-link" data-slug="@product.Slug">
                                    <div class="image-container">
                                        <img src="/Upload/Products/@product.Image" class="product-image" alt="@product.Name">
                                    </div>
                                    <div class="card-body p-3">
                                        <h6 class="card-title mb-2 product-title">@product.Name</h6>
                                        <div class="d-flex align-items-center gap-2 mb-2">
                                            <span class="text-danger fw-bold">@product.SellPrice?.ToString("C0", new CultureInfo("vi-VN"))</span>
                                            @if (product.SellPrice != product.OriginalPrice)
                                            {
                                                <span class="text-decoration-line-through text-muted" style="font-size:0.8rem">@product.OriginalPrice?.ToString("C0", new CultureInfo("vi-VN"))</span>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="card-body p-3 pt-0">
                                    <button class="btn btn-outline-danger btn-sm w-100 addToWishlist" data-id="@product.ProductId">
                                        <i class="far fa-heart"></i> Yêu thích
                                    </button>
                                </div>
                            </div>

                        }
                    </div>
                </div>
            </div>
        </div>
    </section>
    <div class="container-md">
        <div class="reviews-section">
            <h3 class="text-center">Đánh giá sản phẩm</h3>
            <div class="rating-summary">
                <div class="average-rating">
                    <span class="rating-number">@ViewBag.averageRating.ToString("F1")</span>
                    <div class="stars ">
                        @for (int i = 1; i <= 5; i++)
                        {
                            if (i <= Math.Floor((decimal)ViewBag.averageRating))
                            {
                                <i class="fas fa-star"></i>
                            }
                            else if (i - ViewBag.averageRating < 1)
                            {
                                <i class="fas fa-star-half-alt"></i>
                            }
                            else
                            {
                                <i class="far fa-star"></i>
                            }
                        }
                    </div>
                    <span class="total-reviews">(@ViewBag.review_count đánh giá)</span>
                </div>

                <div class="rating-bars">
                    @for (int i = 5; i >= 1; i--)
                    {
                        var count = ViewBag.ratingSummary.ContainsKey(i) ? ViewBag.ratingSummary[i] : 0;
                        var percentage = (ViewBag.review_count > 0) ? (count * 100 / ViewBag.review_count) : 0;

                        <div class="rating-bar-item">
                            <span class="star-count">@i <i class="fas fa-star stars"></i></span>
                            <div class="progress">
                                <div class="progress-bar" style="width: @percentage%"></div>
                            </div>
                            <span class="rating-count">@count</span>
                        </div>
                    }
                </div>
            </div>

            <div class="review-list">
                @foreach (var review in ViewBag.reviews)
                {
                    <div class="review-item">
                        <div class="d-flex align-items-start">
                            <img src="/Upload/Avatar/@(review.User.Img ?? "none.png")" class="user-avatar" alt="User Avatar">

                            <div class="review-content">
                                <div class="review-header">
                                    <h5> @review.User.LastName @review.User.FirstName</h5>
                                    <div class="review-rating">
                                       (@review.Rating <i class="fas fa-star stars"></i>)
                                    </div>
                                    <small class="text-muted">
                                        @((review.ReviewDate as DateTime?)?.TimeAgo() ?? "Không xác định")
                                    </small>
                                </div>
                                <p class="review-text">@review.Comment</p>
                               @*  @if (review.Images?.Any() == true)
                                {
                                    <div class="review-images">
                                        @foreach (var img in review.Images)
                                        {
                                            <img src="@img.Url" alt="Review Image">
                                        }
                                    </div>
                                } *@
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="comments-product-container">
        <div class="comments-product-section">
            <div class="comments-product-title">
                <h3 class="text-center">Bình luận</h3>
            </div>

            <div class="comments-product-new-comment">
                @if (ViewBag.User != null)
                {
                    <img src="~/Upload/Avatar/@ViewBag.User.Img"
                         class="comments-product-new-comment-avatar"
                         alt="User Avatar">
                }
                else
                {
                    <img src="~/Upload/Avatar/none.png"
                         class="comments-product-new-comment-avatar"
                         alt="User Avatar">
                }
                <input type="text"
                       class="comments-product-comment-input"
                       id="CmContent"
                       placeholder="Viết bình luận của bạn..."
                       rows="1" />
                <button id="CreateCm"
                        data-userId="@ViewBag.User.UserId"
                        data-product-id="@Model.ProductId"
                        class="comments-product-send-btn">
                    <i class="fas fa-paper-plane"></i>
                    <span>Gửi</span>
                </button>
            </div>

            <div class="comments-product-list">
                @if (ViewBag.comments != null)
                {
                    @foreach (var parentComment in ViewBag.comments)
                    {
                        <div class="comments-product-item">
                            <img src="/Upload/Avatar/@parentComment.UserAvatar"
                                 class="comments-product-item-avatar"
                                 alt="User Avatar">

                            <div class="comments-product-item-content">
                                <div class="comments-product-item-header">
                                    <div>
                                        <h5 class="comments-product-item-username">@parentComment.UserName</h5>
                                        <small class="comments-product-item-date">
                                            @((parentComment.CreatedAt as DateTime?)?.TimeAgo() ?? "Không xác định")
                                        </small>
                                    </div>
                                    @if(ViewBag.User.UserId == parentComment.UserId)
                                    {
                                        <div class="dropdown">
                                            <a class="text-muted" href="#" role="button"
                                               id="dropdownMenuLink-@parentComment.CommentId"
                                               data-bs-toggle="dropdown" aria-expanded="false">
                                                <i class="fas fa-ellipsis-h"></i>
                                            </a>
                                            <ul class="dropdown-menu dropdown-menu-end"
                                                aria-labelledby="dropdownMenuLink-@parentComment.CommentId">
                                                <li>
                                                    <button class="dropdown-item edit-comment"
                                                       data-comment-id="@parentComment.CommentId">
                                                        <i class="fas fa-edit"></i> Sửa
                                                    </button>
                                                </li>
                                                <li>
                                                    <button class="dropdown-item delete-comment"
                                                       data-comment-id="@parentComment.CommentId">
                                                        <i class="fas fa-trash"></i> Xóa
                                                    </button>
                                                </li>
                                            </ul>
                                        </div>
                                    }
                                </div>

                                <p class="comments-product-item-text">
                                    @parentComment.Content
                                </p>

                                <div class="comments-product-reply-container">
                                    <span class="comments-product-reply-link">
                                        <i class="fas fa-reply"></i> Trả lời
                                    </span>
                                    <div class="comments-product-reply-form">
                                        <input type="text"
                                               class="comments-product-reply-input reply-text"
                                               data-parent-id="@parentComment.CommentId"
                                               placeholder="Trả lời bình luận..." />
                                        <button class="comments-product-reply-btn reply-btn"
                                                data-product-id="@Model.ProductId"
                                                data-comment-id="@parentComment.CommentId">
                                            <i class="fas fa-paper-plane"></i>
                                        </button>
                                    </div>
                                </div>

                                @if (parentComment.Replies != null)
                                {
                                    <div class="comments-product-replies-container pt-3">
                                        @foreach (var reply in parentComment.Replies)
                                        {
                                            <div class="comments-product-item comments-product-reply">
                                                <img src="/Upload/Avatar/@reply.UserAvatar"
                                                     class="comments-product-item-avatar"
                                                     alt="User Avatar">
                                                <div class="comments-product-item-content">
                                                    <div class="comments-product-item-header">
                                                        <div>
                                                            <h6 class="comments-product-item-username">@reply.UserName</h6>
                                                            <span class="text-muted" style="font-size: 0.75rem;">
                                                                đã trả lời bình luận của
                                                                <span class="text-primary">@parentComment.UserName</span>
                                                            </span>
                                                            <br />
                                                            <small class="comments-product-item-date">
                                                                @((reply.CreatedAt as DateTime?)?.TimeAgo() ?? "Không xác định")
                                                            </small>
                                                        </div>
                                                        @if (ViewBag.User.UserId == reply.UserId)
                                                        {
                                                            <div class="dropdown">
                                                                <a class="text-muted" href="#" role="button"
                                                                   id="dropdownMenuLink-@reply.CommentId"
                                                                   data-bs-toggle="dropdown" aria-expanded="false">
                                                                    <i class="fas fa-ellipsis-h"></i>
                                                                </a>
                                                                <ul class="dropdown-menu dropdown-menu-end"
                                                                    aria-labelledby="dropdownMenuLink-@reply.CommentId">
                                                                    <li>
                                                                        <button class="dropdown-item edit-comment"
                                                                           data-comment-id="@reply.CommentId">
                                                                            <i class="fas fa-edit"></i> Sửa bình luận
                                                                        </button>
                                                                    </li>
                                                                    <li>
                                                                        <button type="button" class="dropdown-item delete-comment"
                                                                                data-comment-id="@reply.CommentId">
                                                                            <i class="fas fa-trash"></i> Xóa bình luận
                                                                        </button>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        }
                                                    </div>
                                                    <p class="comments-product-item-text">@reply.Content</p>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p class="text-center text-muted">Chưa có bình luận</p>
                }
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Cập nhật ảnh chính khi click vào thumbnail
        $('.thumbnail').click(function () {
            $('.thumbnail').removeClass('active');
            $(this).addClass('active');
            const newSrc = $(this).data('src');
            $('#mainImage').attr('src', newSrc);
        });


        // Điều khiển nút prev và next
        const scrollAmount = 150;

        $('.thumbnail-control.prev').click(function () {
            $('.thumbnail-container').animate({
                scrollTop: '-=' + scrollAmount
            }, 1);
        });

        $('.thumbnail-control.next').click(function () {
            $('.thumbnail-container').animate({
                scrollTop: '+=' + scrollAmount
            }, 1);
        });

        // Kiểm tra và ẩn/hiện nút điều hướng
        function checkScrollPosition() {
            const container = $('.thumbnail-container');
            const scrollTop = container.scrollTop();
            const maxScroll = container[0].scrollHeight - container.height();

            $('.thumbnail-control.prev').toggle(scrollTop > 0);
            $('.thumbnail-control.next').toggle(scrollTop < maxScroll);

            // Xử lý cho mobile view
            if (window.innerWidth <= 768) {
                const scrollLeft = container.scrollLeft();
                const maxScrollLeft = container[0].scrollWidth - container.width();

                $('.thumbnail-control.prev').toggle(scrollLeft > 0);
                $('.thumbnail-control.next').toggle(scrollLeft < maxScrollLeft);
            }
        }

        // Gọi hàm kiểm tra khi tải trang và khi cuộn
        checkScrollPosition();
        $('.thumbnail-container').scroll(checkScrollPosition);

        // Kiểm tra khi resize window
        $(window).resize(checkScrollPosition);
    });
</script>
<script>
    // Đợi cho DOM load xong
    window.addEventListener('DOMContentLoaded', function () {
        // Kiểm tra xem các element có tồn tại không
        const productDetail = document.querySelector('.product-detail');
        const seeMoreBtn = document.querySelector('.btn-see-more');
        const content = document.querySelector('.description-content');

        // Chỉ thực hiện nếu tìm thấy tất cả các element cần thiết
        if (productDetail && seeMoreBtn && content) {
            // Hàm kiểm tra chiều cao nội dung
            function checkContentHeight() {
                try {
                    const contentHeight = content.offsetHeight;
                    const maxHeight = 200; // Chiều cao tối đa trước khi hiện nút xem thêm

                    if (contentHeight <= maxHeight) {
                        seeMoreBtn.style.display = 'none';
                        productDetail.style.maxHeight = 'none';
                        const fadeBottom = document.querySelector('.fade-bottom');
                        if (fadeBottom) {
                            fadeBottom.style.display = 'none';
                        }
                    } else {
                        seeMoreBtn.style.display = 'block';
                        if (!productDetail.classList.contains('expanded')) {
                            productDetail.style.maxHeight = '300px';
                        }
                    }
                } catch (error) {
                    console.error('Error checking content height:', error);
                }
            }

            // Xử lý sự kiện click
            seeMoreBtn.addEventListener('click', function () {
                if (productDetail.classList.contains('expanded')) {
                    productDetail.classList.remove('expanded');
                    this.textContent = 'Xem thêm';
                    productDetail.style.maxHeight = '300px';
                    // Scroll back to top of description
                    productDetail.scrollIntoView({ behavior: 'smooth', block: 'start' });
                } else {
                    productDetail.classList.add('expanded');
                    this.textContent = 'Thu gọn';
                    productDetail.style.maxHeight = 'none';
                }
            });

            // Chạy kiểm tra ban đầu sau một khoảng thời gian ngắn để đảm bảo nội dung đã được render
            setTimeout(checkContentHeight, 100);

            // Thêm sự kiện resize
            window.addEventListener('resize', checkContentHeight);
        } else {
            console.warn('Some elements are missing from the DOM');
        }
    });
</script>

<script>
    // Auto-resize textarea
    function autoResize(textarea) {
        textarea.style.height = 'auto';
        textarea.style.height = textarea.scrollHeight + 'px';
    }

    // Add auto-resize to all textareas
    document.querySelectorAll('textarea').forEach(textarea => {
        textarea.addEventListener('input', () => autoResize(textarea));
    });

    // Toggle reply form
    document.querySelectorAll('.comments-product-reply-link').forEach(link => {
        link.addEventListener('click', (e) => {
            const replyForm = e.target.closest('.comments-product-reply-container').querySelector('.comments-product-reply-form');
            replyForm.classList.toggle('active');
            if (replyForm.classList.contains('active')) {
                const textarea = replyForm.querySelector('.comments-product-reply-input');
                textarea.focus();
            }
        });
    });

    // Handle click outside to close reply form
    document.addEventListener('click', (e) => {
        if (!e.target.closest('.reply-container')) {
            document.querySelectorAll('.reply-form').forEach(form => {
                form.classList.remove('active');
            });
        }
    });
</script>

<script>
    // Định nghĩa biến variantId ở bên ngoài
    let variantId = null;

    document.querySelectorAll('.varient-card').forEach(function (card) {
        card.addEventListener('click', function () {
            // Xóa lớp 'selected' khỏi tất cả các thẻ
            document.querySelectorAll('.varient-card').forEach(function (c) {
                c.classList.remove('selected');
            });

            // Thêm lớp 'selected' vào thẻ được nhấp vào
            this.classList.add('selected');

            // Lấy ID của biến thể được chọn
            variantId = this.getAttribute('data-id');
            console.log('ID của biến thể:', variantId);
        });
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $('#AddToCart').on('click', function () {
            if (!variantId) {
                alert("Vui lòng chọn một biến thể trước khi thêm vào giỏ hàng.");
                return;
            }

            $.ajax({
                method: 'POST',
                url: '@Url.Action("AddToCart", "User")',
                data: {
                    itemId: variantId,  // Sử dụng variantId đã chọn
                    quantity: 1
                },
                success: function (response) {
                    if (response.success) {
                        let currentCartNumb = parseInt($('#Cart_numb').text()) || 0; // Nếu không có giá trị, gán mặc định là 0
                        $('#Cart_numb').text(currentCartNumb + 1);

                        alert("Đã thêm vào giỏ hàng");
                    } else {
                        alert("Đã có lỗi " + response.message);
                    }
                },
                error: function (response) {
                    alert("Đã có lỗi " + response.message);
                }
            });
        });

        $('#ToCheckOutBtn').on('click', function () {
            if (!variantId) {
                alert("Vui lòng chọn một biến thể trước khi thêm vào giỏ hàng.");
                return;
            }
            var ProductId = $(this).data('id');
            $.ajax({
                method: 'POST',
                url: '@Url.Action("ToCheckout", "User")',
                contentType: 'application/json',
                data: JSON.stringify({
                    cartDTos: [
                        {
                            VarientProductId: variantId,
                            ProductId: ProductId,
                            Quantity: 1
                        }
                    ]
                }),
                success: function (response) {
                    if (response.redirectUrl) {
                        window.location.href = response.redirectUrl; // Điều hướng đến trang CheckoutView
                    }
                },
                error: function (response) {
                    alert(response.responseJSON?.message || 'Có lỗi xảy ra, vui lòng thử lại.');
                }
            });
        })
    });
</script>
<script>
    $(document).ready(function () {
        // Kiểm tra nếu URL Youtube tồn tại
        const urlYoutube = '@Model.UrlYoutube';
        const videoId = extractVideoID(urlYoutube);

        if (videoId) {
            // Thêm iframe hoặc xử lý thumbnail
            $('#youtubeThumbnail').html(`
                                            <div class="thumbnail active" data-src="https://www.youtube.com/embed/${videoId}"
                                                 style="background-image: url('https://img.youtube.com/vi/${videoId}/0.jpg')">
                                            </div>
                                        `);
        }

        // Hàm trích xuất ID video từ URL YouTube
        function extractVideoID(url) {
            const regExp = /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#&?]*).*/;
            const match = url.match(regExp);
            return (match && match[7].length == 11) ? match[7] : false;
        }
    });
</script>
@*Phần comment*@
<script>
    $(document).ready(function () {
        // Gửi bình luận mới
        $('#CreateCm').on('click', function () {
            var content = $('#CmContent').val();
            var productId = $(this).data('product-id');

            $.ajax({
                method: 'POST',
                url: '@Url.Action("CreateComment", "User")',
                contentType: 'application/json',
                data: JSON.stringify({
                    Content: content,
                    ProductId: productId,
                    ParentCommentId: 0
                }),
                success: function (response) {
                    if (response.success) {
                       
                        location.reload(); // Tải lại trang
                    } else {
                        alert(response.message);
                    }
                },
                error: function () {
                    alert('Có lỗi xảy ra!');
                }
            });
        });

        // Gửi trả lời bình luận
        $('.reply-btn').on('click', function () {
            var content = $(this).siblings('.reply-text').val();
            var productId = $(this).data('product-id');
            var parentCommentId = $(this).data('comment-id');

            $.ajax({
                method: 'POST',
                url: '@Url.Action("CreateComment", "User")',
                contentType: 'application/json',
                data: JSON.stringify({
                    Content: content,
                    ProductId: productId,
                    ParentCommentId: parentCommentId
                }),
                success: function (response) {
                    if (response.success) {
                      
                        location.reload(); // Tải lại trang
                    } else {
                        alert(response.message);
                    }
                },
                error: function () {
                    alert('Có lỗi xảy ra!');
                }
            });
        });

        //Xóa bình luận
        $('.delete-comment').on('click', function () {
            var commentId = $(this).data('comment-id');

            $.ajax({
                method: 'POST',
                url: '@Url.Action("DeleteComment","User")',
                data: {
                    id: commentId
                },
                success: function (response) {
                    if (response.success) {
                        location.reload();
                    }
                    else {
                        alert(response.message);
                    }
                },
                error: function () {
                    alert('Có lỗi xảy ra');
                }
            });
        })

    });
    $(document).ready(function () {
        $('.edit-comment').on('click', function (e) {
            e.preventDefault();

            // Ẩn các form edit khác nếu đang mở
            $('.comments-product-item-text').each(function () {
                if ($(this).find('.edit-comment-form').length > 0) {
                    $(this).html($(this).find('.original-comment-text').text());
                }
            });

            // Lấy comment cụ thể
            var commentId = $(this).data('comment-id');
            var commentTextElement = $(this).closest('.comments-product-item-header')
                .siblings('.comments-product-item-text');

            var currentText = commentTextElement.text().trim();

            // Thay thế nội dung comment bằng form edit
            commentTextElement.html(`
                <form class="edit-comment-form d-flex align-items-center">
                    <input type="text"
                           class="form-control edit-comment-input me-2"
                           value="${currentText}"
                           data-original-text="${currentText}"
                           data-comment-id="${commentId}">
                    <div class="btn-group">
                        <button type="submit" class="btn btn-sm btn-success save-edit-comment">
                            <i class="fas fa-check"></i>
                        </button>
                        <button type="button" class="btn btn-sm btn-danger cancel-edit-comment">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </form>
            `);

            // Focus vào input
            commentTextElement.find('.edit-comment-input').focus();
        });

        // Xử lý lưu comment
        $(document).on('submit', '.edit-comment-form', function (e) {
            e.preventDefault();
            var form = $(this);
            var inputElement = form.find('.edit-comment-input');
            var commentId = inputElement.data('comment-id');
            var newText = inputElement.val().trim();
            var originalText = inputElement.data('original-text');

            // Validate
            if (newText === '') {
                alert('Bình luận không thể để trống');
                return;
            }
            $.ajax({
                url: '@Url.Action("UpdateComment", "User")', // Điều chỉnh endpoint phù hợp
                type: 'POST',
                contentType: 'application/json', // Cập nhật contentType đúng
                data: JSON.stringify({ // Cập nhật cú pháp của JSON.stringify
                    Id: commentId,
                    ProductId : @Model.ProductId,
                    Content: newText
                }),
                success: function (response) {
                    if (response.success) {
                        // Cập nhật lại nội dung comment
                        const commentItem = form.closest('.comments-product-item-content');
                        commentItem.find('.comments-product-item-text').html(`<span class="original-comment-text">${newText}</span>`);
                        commentItem.find('.edit-comment-container').remove();
                    } else {
                        alert('Không thể cập nhật bình luận. ' + (response.message || ''));
                    }
                },
                error: function () {
                    alert('Có lỗi xảy ra khi cập nhật bình luận');
                }
            });

        });

        // Hủy edit
        $(document).on('click', '.cancel-edit-comment', function () {
            var form = $(this).closest('.edit-comment-form');
            var originalText = form.find('.edit-comment-input').data('original-text');

            // Quay lại nội dung gốc
            form.closest('.comments-product-item-text')
                .html(`<span class="original-comment-text">${originalText}</span>`);
        });
    });
</script>
