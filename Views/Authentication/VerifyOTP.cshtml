@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Xác nhận OTP</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.css">
    <script src="https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.js"></script>
    <style>
        body {
            background-color: #f8f9fa;
            min-height: 100vh;
            display: flex;
            align-items: center;
            padding: 40px 0;
        }

        .login-container {
            max-width: 400px;
            width: 100%;
            margin: auto;
        }

        .card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 5px 20px rgba(0,0,0,0.1);
        }

        .card-body {
            padding: 2.5rem;
        }

        .logo {
            color: #ff0000;
            font-size: 2.5rem;
            font-weight: bold;
            text-align: center;
            margin-bottom: 1.5rem;
        }
        a{
            color: #ff0000;
        }
        .otp-field {
            display: flex;
            gap: 12px;
            justify-content: center;
            margin: 30px 0;
        }

        .otp-input {
            width: 45px;
            height: 55px;
            text-align: center;
            font-size: 1.2rem;
            font-weight: 600;
            border: 2px solid #dee2e6;
            border-radius: 8px;
            transition: all 0.2s ease;
        }

            .otp-input:focus {
                border-color: #0d6efd;
                box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
                outline: none;
            }

            .otp-input:disabled {
                background-color: #f8f9fa;
                cursor: not-allowed;
            }

            /* Remove spinner from number input */
            .otp-input::-webkit-outer-spin-button,
            .otp-input::-webkit-inner-spin-button {
                -webkit-appearance: none;
                margin: 0;
            }

            .otp-input[type=number] {
                -moz-appearance: textfield;
            }

        .btn-danger {
            padding: 0.8rem 2rem;
            font-weight: 500;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

            .btn-danger:disabled {
                opacity: 0.7;
                cursor: not-allowed;
            }

        .resend {
            margin-top: 20px;
        }

            .resend a {
                color: #ff0000;
                text-decoration: none;
                font-weight: 500;
                cursor: pointer;
            }

                .resend a.disabled {
                    color: gray;
                    pointer-events: none; /* Ngăn không cho bấm */
                    opacity: 0.6;
                }


        .timer {
            color: #6c757d;
            font-size: 0.9rem;
            margin-top: 10px;
        }

        .text-danger {
            display: block;
            margin-top: 10px;
            font-size: 0.9rem;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="login-container">
            <div class="card d-flex" style="padding:15px">
                <div class="mx-auto" style="width:90%">
                    <div class="logo">Tech Store</div>
                    <div class="text-center">
                        <h4 class="mb-3">Xác thực OTP</h4>
                        <p class="text-muted">Mã xác thực đã được gửi đến email của bạn</p>
                    </div>
                        
                    <form method="POST" id="otpForm">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="Email" value="@ViewData["Email"]" />
                        <input type="hidden" name="Action" value="@ViewData["actionDirect"]" />
                        <div class="otp-field">
                            <input type="number" class="otp-input" maxlength="1" autofocus>
                            <input type="number" class="otp-input" maxlength="1" disabled>
                            <input type="number" class="otp-input" maxlength="1" disabled>
                            <input type="number" class="otp-input" maxlength="1" disabled>
                            <input type="number" class="otp-input" maxlength="1" disabled>
                            <input type="number" class="otp-input" maxlength="1" disabled>
                        </div>

                        <input type="hidden" id="completeOtp" name="OtpToken">
                        <div class="mb-3">

                            <span class="text-danger" id="ErrorMessage">@ViewBag.Error</span> <!-- Thông báo lỗi -->

                        </div>
                        <div class="text-center">
                            <button type="submit" class="btn btn-danger justify-content-center align-items-center" disabled>
                                Xác Thực
                                <div class="spinner-border text-light ms-2" role="status" style="width: 1rem; height: 1rem;display: none; ">
                                    <span class="visually-hidden">Loading...</span>
                                </div>
                            </button>


                            <div class="timer" id="timer">
                                Mã sẽ hết hạn sau: <span> </span>
                            </div>

                            <div class="resend">
                                <span class="text-muted">Chưa nhận được mã? </span>
                                <a href="#" id="resendBtn" class="disabled">Gửi lại</a>
                            </div>
                        </div>


                   
                    </form>
                </div>
            </div>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const inputs = document.querySelectorAll(".otp-input");
            const form = document.getElementById("otpForm");
            const submitButton = form.querySelector("button[type='submit']");
            const completeOtpInput = document.getElementById("completeOtp");
            const resendBtn = document.getElementById("resendBtn");
            const timerDisplay = document.querySelector("#timer span");
            const errorMessageContainer = document.getElementById('ErrorMessage');

            let timer;
            const OTP_EXPIRY_KEY = "otp_expiry_time"; // Khóa lưu thời gian hết hạn OTP
            const RESEND_INTERVAL = 120; // 2 phút để bật lại nút resend
            const OTP_DURATION = 180; // 3 phút

            function getRemainingTime() {
                const expiryTime = localStorage.getItem(OTP_EXPIRY_KEY);
                if (expiryTime) {
                    const now = Math.floor(Date.now() / 1000);
                    return Math.max(0, expiryTime - now);
                }
                return OTP_DURATION;
            }

            function startTimer() {
                let timeLeft = getRemainingTime();

                // Lưu thời gian hết hạn nếu chưa có
                if (!localStorage.getItem(OTP_EXPIRY_KEY)) {
                    localStorage.setItem(OTP_EXPIRY_KEY, Math.floor(Date.now() / 1000) + OTP_DURATION);
                }

                timer = setInterval(() => {
                    if (timeLeft <= 0) {
                        clearInterval(timer);
                        localStorage.removeItem(OTP_EXPIRY_KEY);
                        resendBtn.classList.remove('disabled');
                        timerDisplay.parentElement.textContent = 'Mã OTP đã hết hạn';
                    } else {
                        const minutes = Math.floor(timeLeft / 60);
                        const seconds = timeLeft % 60;
                        timerDisplay.textContent = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;
                        if (timeLeft % RESEND_INTERVAL === 0) {
                            resendBtn.classList.remove('disabled');
                        }
                        timeLeft--;
                    }
                }, 1000);
            }

            startTimer(); // Bắt đầu đếm ngược

            inputs.forEach((input, index) => {
                input.addEventListener('input', (e) => {
                    if (e.target.value.length > 1) {
                        e.target.value = e.target.value[0];
                    }
                    const next = input.nextElementSibling;
                    if (next && e.target.value !== '') {
                        next.removeAttribute('disabled');
                        next.focus();
                    }
                    checkComplete();
                });

                input.addEventListener('keydown', (e) => {
                    const prev = input.previousElementSibling;
                    if (e.key === 'Backspace' && input.value === '' && prev) {
                        e.preventDefault();
                        prev.focus();
                        prev.value = '';
                        checkComplete();
                    }
                });

                if (index === 0) {
                    input.addEventListener('paste', (e) => {
                        e.preventDefault();
                        const pasteData = (e.clipboardData || window.clipboardData)
                            .getData('text')
                            .slice(0, inputs.length)
                            .split('');

                        inputs.forEach((input, i) => {
                            if (pasteData[i]) {
                                input.value = pasteData[i];
                                if (input.nextElementSibling) {
                                    input.nextElementSibling.removeAttribute('disabled');
                                }
                            }
                        });
                        checkComplete();
                    });
                }
            });

            function checkComplete() {
                let complete = true;
                let otp = '';

                inputs.forEach(input => {
                    if (!input.value) {
                        complete = false;
                    }
                    otp += input.value;
                });

                if (complete) {
                    submitButton.removeAttribute('disabled');
                    completeOtpInput.value = otp;
                } else {
                    submitButton.setAttribute('disabled', 'true');
                    completeOtpInput.value = '';
                }
            }

            const notyf = new Notyf({
                position: {
                    x: 'right', // Căn phải
                    y: 'top'    // Căn trên
                }
            });

            $('#otpForm').on('submit', function (event) {
                event.preventDefault();

                var action = $('input[name="Action"]').val();
                var otpToken = completeOtpInput.value;
                $('.loading').show();

                $.ajax({
                    method: 'POST',
                    url: '@Url.Action("VerifyOTP", "Authentication")',
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    data: {
                        Action: action,
                        OtpToken: otpToken
                    },
                    success: function (response) {
                        console.log("Phản hồi nhận được:", response);
                        if (response.success) {
                            $('.loading').hide();
                            localStorage.removeItem(OTP_EXPIRY_KEY); // Xóa thời gian khi OTP hợp lệ
                            if (response.action === "Register") {
                                window.location.href = '@Url.Action("Index", "Home")';
                            } else if (response.action === "ForgotPassword") {
                                window.location.href = '@Url.Action("ChangePassword", "Authentication")';
                                $('#ErrorMessage').text(response.message);
                            }
                        } else {
                            $('.loading').hide();
                            errorMessageContainer.textContent = response.message || 'Có lỗi xảy ra';
                        }
                    },
                    error: function (xhr) {
                        $('.loading').hide();
                        notyf.error("Lỗi:", xhr);
                        errorMessageContainer.textContent = xhr.responseJSON?.message || 'Có lỗi xảy ra';
                    }
                });
            });

            resendBtn.addEventListener('click', (e) => {
                e.preventDefault();
                if (!resendBtn.classList.contains('disabled')) {
                    clearInterval(timer);
                    localStorage.setItem(OTP_EXPIRY_KEY, Math.floor(Date.now() / 1000) + OTP_DURATION);
                    startTimer();
                    resendBtn.classList.add('disabled');

                    $.ajax({
                        method: 'POST',
                        url: '@Url.Action("ResendOTP", "Authentication")',
                        headers: {
                            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                        },
                        data: {
                            Email: $('input[name="Email"]').val()
                        },
                        success: function (response) {
                            if (response.success) {
                                notyfsuccess(response.message)
                            }
                            else {
                                notyf.error(response.message); // Hiển thị lỗi từ server
                            }
                         
                        },
                        error: function (xhr) {
                            notyf.error("Lỗi gửi lại mã OTP:", xhr);
                            errorMessageContainer.textContent = xhr.responseJSON?.message || 'Có lỗi xảy ra';
                        }
                    });
                }
            });
        });
    </script>



</body>
</html>